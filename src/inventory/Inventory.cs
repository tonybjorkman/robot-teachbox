using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;

namespace robot_teachbox.src.inventory
{
    public class Inventory
    {
        private List<BottleType> _bottleTypes;
        private List<Bottle> _bottles;

        public Inventory()
        {
            _bottleTypes = new List<BottleType>();
            _bottles = new List<Bottle>();
        }

        public void AddBottleType(string name,int typeId, int gripHeight)
        {
            if(_bottleTypes.Where(x => x.Name.Equals(name)).Count() == 0)
            {
                _bottleTypes.Add(new BottleType(name,gripHeight,typeId));
            } else
            {
                Debug.WriteLine("Bottle type already exists, no need to add the type");
            }
        }
        /// <summary>
        /// Adds a bottle to the inventory and if the bottletype didnt exist before, it will also be added.
        /// </summary>
        /// <param name="typeName">Bottletype name</param>
        /// <param name="gripHeight">Which height from bottom to grip at</param>
        /// <param name="inxPos">The slot the bottle is located at</param>
        /// <param name="amount">Amount of liquid in bottle in cl</param>
        public void AddBottle(string typeName,int typeId, int gripHeight, int inxPos,int amount)
        { //TODO: remove typeId, it will be autogenerated by DB later on.
            AddBottleType(typeName,typeId, gripHeight);
            var type = GetBottleType(typeName);
            InsertBottle(type, inxPos, amount);
        }

        private void InsertBottle(BottleType type, int inxPos, int amount)
        {
            _bottles.Add(new Bottle(type, inxPos, amount));
        }

        public Bottle GetBottle(int id)
        {
            return _bottles.Where(x => (x.Type.Id == id && x.AmountLeft > 5)).First();
        }

        public BottleType GetBottleType(string name)
        {
            return _bottleTypes.Where(x => (x.Name == name)).First();
        }

        public override String ToString()
        {
            StringBuilder table = new StringBuilder();
            table.AppendLine($"{"TypeID",-7}|{"Name",-8}|{"Slot",-5}|Amount");
            foreach(var bottle in _bottles)
            {
                table.AppendLine($"{bottle.Type.Id,-7}|{bottle.Type.Name,-8}|{bottle.SlotPosIndex,-5}|{bottle.AmountLeft}");
            }
            return table.ToString();
        }

    }
}
